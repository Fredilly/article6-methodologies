{
  "rules": [
    {
      "id": "STD.Domain.Method.vX-Y.R-0001",
      "type": "eligibility",
      "when": [
        "Project within scope",
        "Land class matches national definition"
      ],
      "inputs": [],
      "logic": "ELIGIBLE if all predicates true; otherwise INELIGIBLE.",
      "notes": "Split compound predicates into atomic rules in real methods.",
      "refs": [
        {
          "doc": "STD/Method@vX-Y",
          "pages": [
            1,
            3
          ]
        }
      ]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0010",
      "type": "parameter",
      "when": [
        "Carbon fraction for aboveground biomass required"
      ],
      "inputs": [],
      "logic": "Default CF = 0.47 t C per t d.m. (overridable per national default).",
      "notes": "Mark provenance in refs.",
      "refs": [
        {
          "doc": "STD/Tool@vA.B",
          "pages": [
            4,
            6
          ]
        }
      ]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0020",
      "type": "parameter",
      "when": [
        "Root:shoot ratio required"
      ],
      "inputs": [],
      "logic": "RSR_trees = 0.25; RSR_shrubs = 0.40 (dimensionless).",
      "notes": "Override with accepted national defaults only.",
      "refs": [
        {
          "doc": "STD/Tool@vA.B",
          "pages": [
            6
          ]
        }
      ]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0100",
      "type": "equation",
      "when": [
        "Compute AGB carbon at time t"
      ],
      "inputs": [
        { "name": "AGB_dm", "unit": "t d.m. ha-1", "source": "sampling" },
        { "name": "CF", "unit": "t C / t d.m.", "source": "tool-default", "default": 0.47 }
      ],
      "logic": "C_AGB_t = AGB_dm * CF  # output: t C ha-1",
      "notes": "Keep output units explicit.",
      "refs": [{ "doc": "STD/Method@vX-Y", "pages": [2, 5] }]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0110",
      "type": "equation",
      "when": [
        "Convert carbon to CO2e"
      ],
      "inputs": [{ "name": "C_pool", "unit": "t C ha-1", "source": "calc" }],
      "logic": "CO2e_pool = C_pool * 44/12  # output: t CO2e ha-1",
      "notes": "Stoichiometric conversion.",
      "refs": [{ "doc": "STD/Method@vX-Y", "pages": [2, 5] }]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0200",
      "type": "calc",
      "when": [
        "Annual net GHG removals (project)"
      ],
      "inputs": [
        { "name": "dCO2e_AGB",    "unit": "t CO2e ha-1 yr-1", "source": "calc" },
        { "name": "dCO2e_BGB",    "unit": "t CO2e ha-1 yr-1", "source": "calc" },
        { "name": "dCO2e_DOM",    "unit": "t CO2e ha-1 yr-1", "source": "calc" },
        { "name": "dCO2e_Litter", "unit": "t CO2e ha-1 yr-1", "source": "calc" },
        { "name": "dCO2e_SOC",    "unit": "t CO2e ha-1 yr-1", "source": "calc" },
        { "name": "Leakage",      "unit": "t CO2e ha-1 yr-1", "source": "calc" }
      ],
      "logic": "Net_project = (dCO2e_AGB + dCO2e_BGB + dCO2e_DOM + dCO2e_Litter + dCO2e_SOC) - Leakage  # output: t CO2e ha-1 yr-1",
      "notes": "Zero excluded pools via separate eligibility rules.",
      "refs": [{ "doc": "STD/Method@vX-Y", "pages": [6, 9] }]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0300",
      "type": "eligibility",
      "when": [
        "Pool excluded by boundary selection"
      ],
      "inputs": [],
      "logic": "If a pool is not in boundary, its dCO2e := 0.",
      "notes": "Tie to section: project-boundary-pools.",
      "refs": [{ "doc": "STD/Method@vX-Y", "pages": [3] }]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0400",
      "type": "uncertainty",
      "when": [
        "Precision check for sampling strata"
      ],
      "inputs": [{ "name": "RelativePrecision", "unit": "%", "source": "calc" }],
      "logic": "If RelativePrecision > 10 then apply uncertainty discount per table U().",
      "notes": "Discount table encoded as parameter rules.",
      "refs": [{ "doc": "STD/Method@vX-Y", "pages": [10, 12] }]
    },
    {
      "id": "STD.Domain.Method.vX-Y.R-0500",
      "type": "monitoring",
      "when": [
        "Permanent sample plots established per design"
      ],
      "inputs": [
        { "name": "PlotCount", "unit": "count", "source": "design" },
        { "name": "RevisitInterval", "unit": "yr", "source": "design" }
      ],
      "logic": "Revisit plots every RevisitInterval years with consistent mensuration protocol.",
      "notes": "Design variables explicit for QA/QC automation.",
      "refs": [{ "doc": "STD/Method@vX-Y", "pages": [13, 15] }]
    }
  ]
}
